// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(cuid())
  email        String    @unique
  username     String    @unique
  passwordHash String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  
  // Relations
  projects     Project[]
  
  @@map("users")
}

model Project {
  id          String   @id @default(cuid())
  userId      String
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  user         User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  files        ProjectFile[]
  prompts      PromptHistory[]
  
  @@map("projects")
}

model ProjectFile {
  id        String   @id @default(cuid())
  projectId String
  filename  String
  content   String
  type      FileType
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  
  @@unique([projectId, filename])
  @@map("project_files")
}

model PromptHistory {
  id           String   @id @default(cuid())
  projectId    String
  prompt       String
  response     String
  filesChanged String[]
  createdAt    DateTime @default(now())
  
  // Relations
  project      Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  
  @@map("prompt_history")
}

enum FileType {
  HTML
  CSS
  JS
  JSON
  TS
  TSX
  JSX
}
